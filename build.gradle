plugins {
    id 'java'
    id 'com.github.johnrengelman.shadow' version '5.2.0'
}


sourceCompatibility = JavaVersion.VERSION_11
targetCompatibility = JavaVersion.VERSION_11

wrapper {
    distributionType = Wrapper.DistributionType.ALL
    gradleVersion = "6.3"
}


repositories {
    jcenter()
    maven { url 'https://jitpack.io' }
}


def jacksonVersion = "2.10.3"
def jupiterVersion = "5.6.0"
def awsSdkVersion = "1.11.784"

apply plugin: 'java'
apply plugin: 'com.github.johnrengelman.shadow'


dependencies {
    implementation group: 'com.amazonaws', name: 'aws-lambda-java-core', version: '1.2.0'
    implementation group: 'com.amazonaws', name: 'aws-lambda-java-events', version: '2.2.7'
    implementation group: 'com.amazonaws', name: 'aws-java-sdk-lambda', version: awsSdkVersion
    implementation group: 'com.amazonaws', name: 'aws-java-sdk-dynamodb', version: awsSdkVersion
    implementation group: 'com.amazonaws', name: 'aws-java-sdk-cognitoidp', version: awsSdkVersion


    implementation group: 'com.github.BIBSYSDEV', name: 'nva-commons', version: '0.3.4'
    implementation group: 'com.fasterxml.jackson.datatype', name: 'jackson-datatype-jdk8', version: jacksonVersion
    implementation group: 'com.fasterxml.jackson.core', name: 'jackson-databind', version: jacksonVersion
    implementation group: 'com.fasterxml.jackson.module', name: 'jackson-module-parameter-names', version: jacksonVersion

    testImplementation group: 'org.junit.jupiter', name: 'junit-jupiter', version: jupiterVersion
    testImplementation group: 'org.mockito', name: 'mockito-core', version: '3.3.3'
    testImplementation group: 'org.hamcrest', name: 'hamcrest', version: '2.2'

}

jar {
    enabled = true
}

// shadowJar is not necessary. It only added from completeness.
shadowJar {
    archiveBaseName = 'test-lambda-fat'
    archiveClassifier = ''
    transform(com.github.jengelman.gradle.plugins.shadow.transformers.Log4j2PluginsCacheFileTransformer)
}


build.dependsOn(shadowJar)

test {
    useJUnitPlatform()
    failFast = true
    testLogging {
        displayGranularity = 1
        events "FAILED", "PASSED", "SKIPPED", "STANDARD_OUT", "STANDARD_ERROR"
        showExceptions = true
        showStackTraces = true
    }
}


