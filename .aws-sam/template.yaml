AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: A small description of the template
Resources:
  LambdaApi:
    Type: AWS::Serverless::Api
    Properties:
      StageName: develop
      Cors: '''*'''
      Auth:
        ApiKeyRequired: false
        DefaultAuthorizer: MyCognAuthorizer
        Authorizers:
          MyCognAuthorizer:
            UserPoolArn: arn:aws:cognito-idp:eu-west-1:770565769150:userpool/eu-west-1_QzzhX0cnE
  LambdaRole:
    DependsOn: PublicationsTable
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
        - Effect: Allow
          Principal:
            Service:
            - lambda.amazonaws.com
          Action:
          - sts:AssumeRole
      Path: /
      Policies:
      - PolicyName: LambdaAccessPolicy
        PolicyDocument:
          Version: 2012-10-17
          Statement:
          - Effect: Allow
            Action:
            - logs:CreateLogGroup
            - logs:CreateLogStream
            - logs:PutLogEvents
            Resource: '*'
      - PolicyName: DynamoDBGetPolicy
        PolicyDocument:
          Version: 2012-10-17
          Statement:
          - Effect: Allow
            Action:
            - dynamodb:GetItem
            - dynamodb:Query
            Resource:
              Fn::GetAtt:
              - PublicationsTable
              - Arn
            Condition:
              ForAllValues:StringLike:
                dynamodb:LeadingKeys:
                - '*${accounts.google.com:sub}*'
      - PolicyName: DynamoDBPutPolicy
        PolicyDocument:
          Version: 2012-10-17
          Statement:
          - Effect: Allow
            Action:
            - dynamodb:PutItem
            - dynamodb:DescribeTable
            Resource:
              Fn::GetAtt:
              - PublicationsTable
              - Arn
  PublicationsTable:
    Type: AWS::DynamoDB::Table
    Properties:
      AttributeDefinitions:
      - AttributeName: id
        AttributeType: S
      TableName: Publications
      BillingMode: PROVISIONED
      ProvisionedThroughput:
        ReadCapacityUnits: 5
        WriteCapacityUnits: 5
      KeySchema:
      - AttributeName: id
        KeyType: HASH
  MyLambda:
    DependsOn: LambdaRole
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: MyLambda
      Runtime: java11
      Handler: lambda.LambdaHandler::handleRequest
      Role:
        Fn::GetAtt:
        - LambdaRole
        - Arn
      MemorySize: 1400
      Timeout: 60
      Environment:
        Variables:
          ALLOWED_ORIGIN: '*'
      Events:
        LambdaApi:
          Type: Api
          Properties:
            Path: /hello/
            Method: get
            RestApiId:
              Ref: LambdaApi
