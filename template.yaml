AWSTemplateFormatVersion: "2010-09-09"
Transform: AWS::Serverless-2016-10-31

Description: "A small description of the template"

Resources:
  LambdaApi:
    Type: AWS::Serverless::Api
    Properties:
      StageName: develop
      Cors: "'*'"
      Auth:
        ApiKeyRequired: false
        DefaultAuthorizer: MyCognAuthorizer
        Authorizers:
          MyCognAuthorizer:
            UserPoolArn: arn:aws:cognito-idp:eu-west-1:750639270376:userpool/eu-west-1_Fto5AuFGa

  LambdaRole:
    DependsOn: PublicationsTable
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - lambda.amazonaws.com
            Action:
              - 'sts:AssumeRole'
      Path: /
      Policies:
        - PolicyName: LambdaAccessPolicy
          PolicyDocument:
            Version: 2012-10-17
            Statement:
              - Effect: Allow
                Action:
                  - "logs:CreateLogGroup"
                  - "logs:CreateLogStream"
                  - "logs:PutLogEvents"
                Resource: "*"
        - PolicyName: DynamoDBPolicy
          PolicyDocument:
            Version: 2012-10-17
            Statement:
              - Effect: Allow
                Action:
                  - "dynamodb:PutItem"
                  - "dynamodb:GetItem"
                  - "dynamodb:DescribeTable"
                Resource: !GetAtt PublicationsTable.Arn
                Condition:
                  "ForAllValues:StringEquals" :
                    "dynamodb:LeadingKeys": ["og@unit.no"]


  PublicationsTable:
    Type: AWS::DynamoDB::Table
    Properties:
      AttributeDefinitions:
        - AttributeName: id
          AttributeType: S
        - AttributeName: owner_id
          AttributeType: S
      TableName: Publications
      BillingMode: PROVISIONED
      ProvisionedThroughput:
        ReadCapacityUnits: 5
        WriteCapacityUnits: 5
      KeySchema:
        - AttributeName: id
          KeyType: HASH
        - AttributeName: owner_id
          KeyType: RANGE

  MyLambda:
    DependsOn: LambdaRole
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: .
      Runtime: java11
      Handler: lambda.LambdaHandler::handleRequest
      #This role can be created here in the template
      Role: !GetAtt LambdaRole.Arn
      MemorySize: 1400
      Timeout: 60
      Environment:
        Variables:
          ALLOWED_ORIGIN: '*'
      Events:
          LambdaApi:
            Type: Api
            Properties:
              Path: /hello/
              Method: get
              RestApiId: !Ref LambdaApi